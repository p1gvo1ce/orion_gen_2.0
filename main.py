import asyncio
from pydantic_settings import BaseSettings
from utils.logger import (
    init_db, sql_log_writer,
    init_global_logger, get_logger,
    begin_event, set_process,
    hook_std_logging
)
from discord_bot import run_bot

class Settings(BaseSettings):
    discord_token: str
    force_color: int
    class Config:
        env_file = ".env"

settings = Settings()

async def main():
    # 0) –±–∞–∑–∞ + —Ñ–æ–Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä –ª–æ–≥–æ–≤
    await init_db()
    asyncio.create_task(sql_log_writer())

    # 1) –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä
    init_global_logger(source="orion", version="0.1", log_level="INFO")
    hook_std_logging(quiet_access=True)
    log = get_logger(module="main")

    # 2) —Å—Ç–∞—Ä—Ç –æ–±—â–µ–π —Ü–µ–ø–æ—á–∫–∏ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞
    event_id = begin_event(process="main")
    log.INFO("üöÄ Orion startup begin", event_id=event_id)

    try:
        # 3) —ç—Ç–∞–ø ¬´–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏—Å–∫–æ—Ä–¥–∞¬ª ‚Äî —Ç–æ—Ç –∂–µ event_id, –¥—Ä—É–≥–æ–π process
        set_process("discord_bootstrap")
        log.INFO("ü§ñ Discord bot init...", event_id=event_id)

        await run_bot(token=settings.discord_token)  # –≤–Ω—É—Ç—Ä–∏ –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç

        # 4) –≤–µ—Ä–Ω—ë–º—Å—è –≤ 'main' –∏ —Ñ–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º
        set_process("main")
        log.INFO("‚úÖ Orion startup success", event_id=event_id)
    except Exception as e:
        log.EXCEPTION("‚ùå Orion startup failed", e, event_id=event_id)

if __name__ == "__main__":
    asyncio.run(main())
